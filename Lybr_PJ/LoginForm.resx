<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pic_Ins.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>