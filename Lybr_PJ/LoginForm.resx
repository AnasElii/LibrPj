<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pic_Ins.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
</root>